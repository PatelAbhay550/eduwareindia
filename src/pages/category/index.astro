---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { CATEGORIES } from '../../consts';
import FormattedDate from '../../components/FormattedDate.astro';

// Get all blog posts and group by category
const allBlogPosts = await getCollection('blog');
const postsByCategory = CATEGORIES.reduce((acc, category) => {
	acc[category] = allBlogPosts
		.filter(post => post.data.category === category)
		.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
	return acc;
}, {} as Record<string, typeof allBlogPosts>);
---

<Layout 
	title="Browse by Category - Eduware" 
	description="Explore our educational content organized by topics including Programming, Web Development, Data Science, and more."
	keywords={[...CATEGORIES]}
>
	<div class="container">
		<header class="page-header">
			<h1>Browse by Category</h1>
			<p>Explore our educational content organized by topics</p>
		</header>

		<div class="categories-grid">
			{CATEGORIES.map(category => {
				const posts = postsByCategory[category];
				const postCount = posts.length;
				
				return (
					<section class="category-section">
						<div class="category-header">
							<h2 class="category-title">
								<a href={`/category/${category.toLowerCase().replace(/\s+/g, '-')}`}>
									{category}
								</a>
							</h2>
							<span class="post-count">{postCount} article{postCount !== 1 ? 's' : ''}</span>
						</div>
						
						{posts.length > 0 ? (
							<div class="posts-preview">
								{posts.slice(0, 3).map(post => (
									<article class="post-card">
										{post.data.heroImage && (
											<img 
												src={post.data.heroImage.src} 
												alt={post.data.title}
												class="post-image"
											/>
										)}
										<div class="post-content">
											<h3 class="post-title">
												<a href={`/blog/${post.data.slug || post.id}/`}>{post.data.title}</a>
											</h3>
											<p class="post-description">{post.data.description}</p>
											<div class="post-meta">
												<FormattedDate date={post.data.pubDate} />
											</div>
										</div>
									</article>
								))}
								{posts.length > 3 && (
									<a 
										href={`/category/${category.toLowerCase().replace(/\s+/g, '-')}`}
										class="view-all-link"
									>
										View all {postCount} articles â†’
									</a>
								)}
							</div>
						) : (
							<p class="no-posts">No articles in this category yet.</p>
						)}
					</section>
				);
			})}
		</div>
	</div>
</Layout>

<style>
	.page-header {
		text-align: center;
		margin-bottom: 4rem;
	}
	
	.page-header h1 {
		font-size: var(--font-size-4xl);
		margin-bottom: 1rem;
	}
	
	.page-header p {
		font-size: var(--font-size-lg);
		color: var(--text-secondary);
	}
	
	.categories-grid {
		display: grid;
		gap: 3rem;
	}
	
	.category-section {
		background: var(--bg-primary);
		border: 1px solid var(--border-light);
		border-radius: var(--radius-lg);
		padding: 2rem;
		box-shadow: var(--shadow-sm);
	}
	
	.category-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 1.5rem;
		padding-bottom: 1rem;
		border-bottom: 1px solid var(--border-light);
	}
	
	.category-title {
		margin: 0;
		font-size: var(--font-size-2xl);
	}
	
	.category-title a {
		color: var(--primary);
		text-decoration: none;
	}
	
	.category-title a:hover {
		text-decoration: underline;
	}
	
	.post-count {
		background: var(--primary-light);
		color: var(--primary-dark);
		padding: 0.25rem 0.75rem;
		border-radius: var(--radius-lg);
		font-size: var(--font-size-sm);
		font-weight: 500;
	}
	
	.posts-preview {
		display: grid;
		gap: 1rem;
	}
	
	.post-card {
		display: flex;
		gap: 1rem;
		padding: 1rem;
		border: 1px solid var(--border-light);
		border-radius: var(--radius);
		transition: all 0.2s ease;
	}
	
	.post-card:hover {
		box-shadow: var(--shadow-sm);
		transform: translateY(-2px);
	}
	
	.post-image {
		width: 100px;
		height: 80px;
		object-fit: cover;
		border-radius: var(--radius);
		flex-shrink: 0;
	}
	
	.post-content {
		flex: 1;
		min-width: 0;
	}
	
	.post-title {
		margin: 0 0 0.5rem 0;
		font-size: var(--font-size-lg);
	}
	
	.post-title a {
		color: var(--text-primary);
		text-decoration: none;
	}
	
	.post-title a:hover {
		color: var(--primary);
	}
	
	.post-description {
		margin: 0 0 0.5rem 0;
		font-size: var(--font-size-sm);
		color: var(--text-secondary);
		display: -webkit-box;
		-webkit-line-clamp: 2;
		-webkit-box-orient: vertical;
		overflow: hidden;
	}
	
	.post-meta {
		font-size: var(--font-size-xs);
		color: var(--text-muted);
	}
	
	.view-all-link {
		display: inline-block;
		margin-top: 1rem;
		color: var(--primary);
		text-decoration: none;
		font-weight: 500;
	}
	
	.view-all-link:hover {
		text-decoration: underline;
	}
	
	.no-posts {
		color: var(--text-muted);
		font-style: italic;
		text-align: center;
		padding: 2rem 0;
	}
	
	@media (max-width: 768px) {
		.category-header {
			flex-direction: column;
			align-items: flex-start;
			gap: 0.5rem;
		}
		
		.post-card {
			flex-direction: column;
		}
		
		.post-image {
			width: 100%;
			height: 120px;
		}
	}
</style>
